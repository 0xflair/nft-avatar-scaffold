require('dotenv').config();

const web3 = require('web3');
const hre = require('hardhat');
const { loadContract } = require('@0xflair/contracts-registry');
const { FLAIR_OPENSEA_ADDRESSES } = require('@0xflair/react-nft-collections');

const forwarderArtifact = loadContract(
  'common/meta-transactions/UnorderedForwarder',
  LATEST_VERSION,
);

module.exports = {
  // Name of the collection shown in EtherScan and OpenSea
  name: 'Flair Angels',

  // Description of collection stored in contract-level metadata shown in OpenSea
  description:
    'Angels will help bring Flair.Finance to life and make our decentralized world a safer place.',

  // Token tracker symbol shown in EtherScan
  symbol: 'ANGEL',

  // Price of minting
  preSalePrice: web3.utils.toWei('0.06'), // 0.06 ETH
  publicSalePrice: web3.utils.toWei('0.08'), // 0.08 ETH

  // Total number of tokens in your collection
  maxSupply: 8000,

  // Number of pre-sale mints possible for each allow-listed address
  preSaleMaxMintPerWallet: 2,

  // Number of mints possible on each transaction
  publicSaleMaxMintPerTx: 10,

  // Primary image of collection stored in contract-level metadata shown in OpenSea
  collectionImage: 'assets/contract/image.png',

  // Image (or gif) for NFT placeholders before the reveal
  unrevealedPlaceholder: 'assets/contract/placeholder.png',

  // Website of collection stored in contract-level metadata shown in OpenSea
  externalLink: 'https://flair.finance',

  // Royalty fee for secondary sales (on Rarible, OpenSea, LooksRare)
  defaultRoyaltyBps: 500, // Indicates a 5% seller fee.

  // Receiver of the royalty fees
  defaultRoyaltyAddress: '0xc997c206650cc62248a8514e2f60cbe29a24800f',

  // OpenSea registry address to avoid additional approval when collectors want to list on OS
  openSeaProxyRegistryAddress: FLAIR_OPENSEA_ADDRESSES[
    hre.network.config.chainId
  ]
    ? FLAIR_OPENSEA_ADDRESSES[hre.network.config.chainId].registryAddress
    : '0x0',
  openSeaExchangeAddress: FLAIR_OPENSEA_ADDRESSES[hre.network.config.chainId]
    ? FLAIR_OPENSEA_ADDRESSES[hre.network.config.chainId].exchangeAddress
    : '0x0',

  // Address of the trusted forwarder contract when using meta-transactions (i.e. trustless minting from a backend API)
  trustedForwarder: forwarderArtifact.address[hre.network.config.chainId]
    ? forwarderArtifact.address[hre.network.config.chainId]
    : '0x0',

  // Pinata API and Secret Keys to upload and pin metadata for NFTs and contract (you must edit .env file)
  pinataApiKey: process.env.PINATA_API_KEY,
  pinataSecretKey: process.env.PINATA_SECRET_KEY,
};
